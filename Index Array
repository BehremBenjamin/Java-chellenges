/*
Given an array of size N containing elements from 0 to N-1. All values from 0 to N-1 are present in the array 
and if they are not there then -1 is there to take its place
*/

import java.util.Arrays;
import java.util.Collections;

public class IndexArray {
    public static int[] indexArray(int[] arr) {
        for (int i = 0; i<arr.length; i++) {
            int current = i, value = -1;
            while (arr[current] != -1 && arr[current] != current) {
                int temp = arr[current];
                arr[current] = value;
                value = current = temp;
            }
            // checking swaps
            if (value != -1) arr[current] = value;
        }
    return arr;
    }
   
   // --second solution with swaping -- 
    public static int[] indexArray2(int[] arr) {
        for (int i = 0; i<arr.length; i++) {
            while (arr[i] != -1 && arr[i] != i) {
                // do swap
                int temp = arr[i];
                arr[i] = arr[temp];
                arr[temp] = temp;
            }
        }
        return arr;
    }
    
        public static void main(String[] args) {
        // Aray for function test
        int[] arr2 = {8,-1,6,1,9,3,2,7,4,-1};
        System.out.println(Arrays.toString(IndexArray_MO.indexArray(arr2)));
        System.out.println(Arrays.toString(IndexArray_MO.indexArray2(arr2)));
    }
}
